kind: ConfigMap
metadata:
  name: grafana-agent-metrics
  namespace: monitoring  
apiVersion: v1
data:
  agent.yaml: |    
    server:
      http_listen_port: 80
    metrics:
      wal_directory: /tmp/grafana-agent-wal
      global:
        scrape_interval: 60s
        external_labels:
          cluster: ${CLUSTER_NAME}
      configs:
      - name: integrations
        remote_write:
        - url: ${PROM_URL}  
          basic_auth:
            username: ${PROM_USERNAME}
            password: ${PROM_PASSWORD}
        scrape_configs:
        - job_name: "integrations/cert-manager"
          static_configs:
            - targets: ['cert-manager.cert-manager.svc.cluster.local:9402']
        - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          job_name: integrations/kubernetes/cadvisor
          kubernetes_sd_configs:
              - role: node
          metric_relabel_configs:
            - action: drop
              regex: container_([a-z_]+);
              source_labels:
                - __name__
                - image
            - action: drop
              regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
              source_labels:
                - __name__
          relabel_configs:
              - replacement: kubernetes.default.svc.cluster.local:443
                target_label: __address__
              - regex: (.+)
                replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
                source_labels:
                  - __meta_kubernetes_node_name
                target_label: __metrics_path__
          scheme: https
          tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: false
              server_name: kubernetes
        - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          job_name: integrations/kubernetes/kubelet
          kubernetes_sd_configs:
              - role: node
          relabel_configs:
              - replacement: kubernetes.default.svc.cluster.local:443
                target_label: __address__
              - regex: (.+)
                replacement: /api/v1/nodes/${1}/proxy/metrics
                source_labels:
                  - __meta_kubernetes_node_name
                target_label: __metrics_path__
          scheme: https
          tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: false
              server_name: kubernetes
        - job_name: integrations/kubernetes/kube-state-metrics
          kubernetes_sd_configs:
              - role: service
          metric_relabel_configs:
              - source_labels: [__name__]
                regex: kube_statefulset_status_replicas|kubelet_pleg_relist_duration_seconds_count|kube_daemonset_status_number_available|kubelet_runtime_operations_errors_total|kube_deployment_metadata_generation|kubelet_certificate_manager_server_ttl_seconds|node_namespace_pod_container:container_memory_swap|container_network_transmit_bytes_total|node_namespace_pod_container:container_memory_working_set_bytes|kube_pod_container_status_waiting_reason|kube_daemonset_updated_number_scheduled|kube_statefulset_status_update_revision|kube_statefulset_metadata_generation|kube_node_spec_taint|kube_node_status_allocatable|kube_job_spec_completions|storage_operation_errors_total|up|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_server_expiration_renew_errors|container_cpu_cfs_periods_total|kube_statefulset_status_replicas_updated|kube_daemonset_status_number_misscheduled|cluster:namespace:pod_memory:active:kube_pod_container_resource_requests|kubelet_certificate_manager_client_ttl_seconds|kubelet_running_containers|process_cpu_seconds_total|kube_job_failed|kubelet_runtime_operations_duration_seconds_bucket|container_fs_writes_total|container_memory_cache|kubelet_volume_stats_capacity_bytes|kube_deployment_status_replicas_available|kube_deployment_status_observed_generation|kube_horizontalpodautoscaler_status_current_replicas|container_memory_rss|kube_node_status_capacity|kube_statefulset_status_observed_generation|storage_operation_duration_seconds_bucket|kube_daemonset_status_desired_number_scheduled|container_network_transmit_packets_total|kubelet_running_pods|node_namespace_pod_container:container_memory_cache|kube_statefulset_status_current_revision|kube_statefulset_replicas|kubelet_running_pod_count|container_network_transmit_packets_dropped_total|volume_manager_total_volumes|kube_daemonset_status_current_number_scheduled|kubernetes_build_info|kube_pod_container_resource_requests|kubelet_volume_stats_inodes|kubelet_node_config_error|kubelet_cgroup_manager_duration_seconds_count|kube_node_status_condition|kube_resourcequota|kube_horizontalpodautoscaler_spec_min_replicas|kubelet_volume_stats_inodes_used|process_resident_memory_bytes|namespace_workload_pod|kubelet_pleg_relist_duration_seconds_bucket|rest_client_requests_total|kube_pod_info|container_fs_reads_bytes_total|kube_horizontalpodautoscaler_status_desired_replicas|kubelet_certificate_manager_client_expiration_renew_errors|cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests|kubelet_pleg_relist_interval_seconds_bucket|container_network_receive_bytes_total|rest_client_request_duration_seconds_bucket|node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate|kubelet_pod_worker_duration_seconds_bucket|namespace_cpu:kube_pod_container_resource_requests:sum|kube_deployment_spec_replicas|namespace_workload_pod:kube_pod_owner:relabel|kubelet_node_name|kube_deployment_status_replicas_updated|node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile|node_namespace_pod_container:container_memory_rss|container_memory_swap|go_goroutines|kube_job_status_succeeded|kube_horizontalpodautoscaler_spec_max_replicas|cluster:namespace:pod_memory:active:kube_pod_container_resource_limits|kubelet_running_container_count|kube_pod_owner|container_network_receive_packets_dropped_total|container_memory_working_set_bytes|storage_operation_duration_seconds_count|kube_pod_status_phase|kube_statefulset_status_replicas_ready|kube_pod_container_resource_limits|container_cpu_cfs_throttled_periods_total|kube_node_info|kubelet_pod_worker_duration_seconds_count|kubelet_pod_start_duration_seconds_count|namespace_cpu:kube_pod_container_resource_limits:sum|namespace_memory:kube_pod_container_resource_limits:sum|cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits|kube_namespace_created|container_fs_reads_total|container_network_receive_packets_total|container_fs_writes_bytes_total|kubelet_volume_stats_available_bytes|kubelet_runtime_operations_total|namespace_memory:kube_pod_container_resource_requests:sum|container_cpu_usage_seconds_total|machine_memory_bytes|kube_replicaset_owner
                action: keep
          relabel_configs:
              - action: keep
                regex: kube-state-metrics
                source_labels:
                  - __meta_kubernetes_service_name
        
    #integrations:
    #  prometheus_remote_write:
    #  - url: ${PROM_URL}
    #    basic_auth:
    #      username: ${PROM_USERNAME}
    #      password: ${PROM_PASSWORD}
    #  mysqld_exporter:
    #    enabled: true
    #    data_source_name: root@(localhost:3306)/
    #  redis_exporter:
    #    enabled: true
    #    redis_addr: localhost:6379
    #  postgres_exporter:
    #    enabled: true
    #    data_source_names:
    #      - postgresql://root@localhost:5432

---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana-agent-metrics
#   namespace: monitoring
# spec:
#   minReadySeconds: 10
#   replicas: 1
#   revisionHistoryLimit: 10
#   selector:
#     matchLabels:
#       name: grafana-agent-metrics
#   template:
#     metadata:
#       labels:
#         name: grafana-agent-metrics
#     spec:
#       containers:
#       - args:
#         - -config.file=/etc/agent/agent.yaml
#         - -config.expand-env
#         command:
#         - /bin/agent
#         env:
#         - name: HOSTNAME
#           valueFrom:
#             fieldRef:
#               fieldPath: spec.nodeName
#         - name: CLUSTER_NAME
#           valueFrom:
#             secretKeyRef:
#               key: grafana-k8s-cluster-name
#               name: grafana-agent-secret 
#         - name: PROM_URL
#           valueFrom:
#             secretKeyRef:
#               key: grafana-prom-url
#               name: grafana-agent-secret
#         - name: PROM_USERNAME
#           valueFrom:
#             secretKeyRef:
#               key: grafana-prom-username
#               name: grafana-agent-secret
#         - name: PROM_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               key: grafana-prom-password
#               name: grafana-agent-secret
#         image: grafana/agent:v0.24.2
#         imagePullPolicy: IfNotPresent
#         name: agent
#         ports:
#         - containerPort: 80
#           name: http-metrics
#         volumeMounts:
#         - mountPath: /etc/agent
#           name: grafana-agent-metrics
#       serviceAccount: grafana-agent
#       volumes:
#       - configMap:
#           name: grafana-agent-metrics
#         name: grafana-agent-metrics
#   strategy:
#     type: RollingUpdate

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-agent
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana-agent
  serviceName: grafana-agent
  template:
    metadata:
      labels:
        name: grafana-agent
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yaml
        - -enable-features=integrations-next
        - -server.http.address=0.0.0.0:80
        - -config.expand-env
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_NAME
          valueFrom:
            secretKeyRef:
              key: grafana-k8s-cluster-name
              name: grafana-agent-secret 
        - name: PROM_URL
          valueFrom:
            secretKeyRef:
              key: grafana-prom-url
              name: grafana-agent-secret
        - name: PROM_USERNAME
          valueFrom:
            secretKeyRef:
              key: grafana-prom-username
              name: grafana-agent-secret
        - name: PROM_PASSWORD
          valueFrom:
            secretKeyRef:
              key: grafana-prom-password
              name: grafana-agent-secret
        image: grafana/agent:v0.24.2
        imagePullPolicy: IfNotPresent
        name: grafana-agent
        ports:
        - containerPort: 80
          name: http-metrics
        volumeMounts:
        - mountPath: /var/lib/agent
          name: agent-wal
        - mountPath: /etc/agent
          name: grafana-agent-metrics
      serviceAccount: grafana-agent
      volumes:
      - configMap:
          name: grafana-agent-metrics
        name: grafana-agent-metrics
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: agent-wal
      namespace: monitoring
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi