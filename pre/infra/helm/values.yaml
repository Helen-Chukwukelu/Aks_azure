# Default values for optty.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

client:
  name: optty
  domain: dev.optty.deimos.co.za

replicaCount: 1

automountServiceAccountToken: true
# configuration for images to deploy
image:
  # Specify image name
  name: nginx
  # Specify a image pull policy
  # 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # image tag to deploy
  tag: ""

## Specify one or more imagePullSecrets
##
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []

checkovSkippedIDs:
  - "CKV_K8S_11" # CKV_K8S_11: "CPU limits should be set" Guide: https://docs.bridgecrew.io/docs/bc_k8s_10
  - "CKV_K8S_13" # CKV_K8S_13: "Memory limits should be set" Guide: https://docs.bridgecrew.io/docs/bc_k8s_12
  - "CKV_K8S_10" # CKV_K8S_10: "CPU requests should be set" Guide: https://docs.bridgecrew.io/docs/bc_k8s_9
  - "CKV_K8S_12" # CKV_K8S_12: "Memory requests should be set" Guide: https://docs.bridgecrew.io/docs/bc_k8s_11
  - "CKV_K8S_43" # CKV_K8S_43: "Image should use digest" Guide: https://docs.bridgecrew.io/docs/bc_k8s_39
  - "CKV_K8S_35" # CKV_K8S_35: "Prefer using secrets as files over secrets as environment variables" Guide: https://docs.bridgecrew.io/docs/bc_k8s_33
  - "CKV_K8S_38" # CKV_K8S_38: "automount service account token"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  # see https://github.com/kubernetes/kubernetes/blob/release-1.4/docs/design/seccomp.md for more information
  # options are "runtime/default" (container runtime defaults), "unconfined" (no restriction), "localhost/<profile-name>" (custom rules)
  # Docker defaults can be found at  https://github.com/moby/moby/blob/master/profiles/seccomp/default.json
  seccomp.security.alpha.kubernetes.io/pod: runtime/default # security patch
  linkerd.io/inject: enabled
  config.linkerd.io/skip-outbound-ports: "4222,3306,6379"
  config.linkerd.io/skip-inbound-ports: "4222,3306,6379"

podSecurityContext: {}
  # runAsNonRoot: true
  # fsGroup: 2000
  # runAsUser: 20000

## Configure securitycontext
## ref: http://kubernetes.io/docs/user-guide/security-context/
##
securityContext:
  capabilities:
    drop:
      - ALL                         # revoke all capabilities
    add: []                         # manually add only the minimum capabilities needed
  readOnlyRootFilesystem: true      # prevent files from being created or modified
  runAsNonRoot: true                # prevent running as "root" user
  runAsUser: 20000                  # prevent running as a user id that exists on the host (eg: uid 1000 belonging to first non-root host user)
  allowPrivilegeEscalation: false   # prevent setuid binaries (eg: sudo) running as root
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  annotations: {}

deployment:
  annotations:
    # see https://github.com/kubernetes/kubernetes/blob/release-1.4/docs/design/seccomp.md for more information
    # options are "runtime/default" (container runtime defaults), "unconfined" (no restriction), "localhost/<profile-name>" (custom rules)
    # Docker defaults can be found at  https://github.com/moby/moby/blob/master/profiles/seccomp/default.json
    seccomp.security.alpha.kubernetes.io/pod: runtime/default # security patch

probes:
  livenessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 20
  readinessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 20
    timeoutSeconds: 10

## Configure environment variables that will be present during deployment
env: []
  # - name: name-1
  #   value: value-1

## Configure environment variables that will be present from kubernetes-external-secret during deployment
envFromExternalSecret: []
  # - key: name-2  # The External Secret Key
  #   version: value-2 # The version of the secret
  #   name: value-2 # The name of the kubernetes secret key to create
  # - key: name-1  # The External Secret Key
  #   version: value-1 # The version of the secret
  #   name: value-1 # The name of the kubernetes secret key to create

externalSecret:
  backendType: gcpSecretsManager
  projectId: dcp-enterprise-optty

url: ''

ingress:
  enabled: false
  redirectHttps: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  #  set host if you have one, else a host is dynamically generated ffrom the release name and the namespace
  # host: chart-example.local
  path: "/*"
  # set to true is SSL is to be enables
  tls: false
  # issuer: "test" if not specified defaults to lets-encrypt-prod
  class: gce # specify ingress class, defaults to gce
  gce:
    sslPolicy: global-ingress-gce-ssl-policy
    securityPolicy: owasp-top-ten


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## HPA support for custom metrics:
## This section enables service to autoscale based on defined custom metrics.
## In order to use this functionality, Need to enable a custom metrics API server by
## implementing "custom.metrics.k8s.io" using supported third party adapter
## Example: https://github.com/directxman12/k8s-prometheus-adapter
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

sidecar:
  enabled: false
  name:
  image:
    repository:
    tag:
    pullPolicy: Always
  args: []
  port:
  probe:
    type: request
    path: /health
    initialDelaySeconds: 120
    periodSeconds: 10
    httpHeaders:
      enabled: false
      liveness:
        name: X-Kubernetes-Health-Check
        value: livenessProbe
      readiness:
        name: X-Kubernetes-Health-Check
        value: readinessProbe

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## List of node taints to tolerate (requires Kubernetes >= 1.6)
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      preference:
        matchExpressions:
        - key: gitlab-runner
          operator: NotIn
          values:
          - "true"
