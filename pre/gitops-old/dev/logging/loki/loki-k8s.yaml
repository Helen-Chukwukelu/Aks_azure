apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-frontend
  namespace: loki
data:
  config.yaml: |
    # Disable the requirement that every request to Cortex has a
    # X-Scope-OrgID header. `fake` will be substituted in instead.
    auth_enabled: false

    # We don't want the usual /api/prom prefix.
    http_prefix:

    server:
      http_listen_port: 3100

    # schema_config:
    #   configs:
    #   - from: 2021-01-01
    #     store: cassandra
    #     object_store: cassandra
    #     schema: v11
    #     index:
    #       prefix: loki_index_
    #       period: 168h
    #     chunks: 
    #       prefix: loki_chunk_
    #       period: 168h

    # storage_config:
    #   cassandra:
    #     addresses: rook-cassandra-us-east-1-us-east-1a-0.rook-cassandra.svc.insightv2.k8cluster #<comma-separated-IPs-or-hostnames> 
    #     port: 9042
    #     keyspace: lokiindex
    #     auth: false
    #     # username: <username> # only applicable when auth=true
    #     # password: <password> # only applicable when auth=true
    #     SSL: false

    schema_config:
      configs:
      - from: 2021-01-01
        store: boltdb-shipper
        object_store: aws
        schema: v11
        index:
          prefix: index_
          period: 24h

    storage_config:
      aws:
        # endpoint: rook-ceph-rgw-prevoir-bm-store.rook-ceph.svc:80
        # bucketnames: loki-chunks-ceph-bkt-b7211883-66a9-4d83-960a-78c5ca2de17c
        # access_key_id: SJ28QQZRB9CWN2RUBEW5
        # secret_access_key: RfwlPPvsaCMNnRCn2pKY08ADdWkNgITAp4zMgkpL
        s3forcepathstyle: true
        # insecure: true
        # region: us-east-1
        s3: http://ceph-user-W9l5TNR4:RfwlPPvsaCMNnRCn2pKY08ADdWkNgITAp4zMgkpL@rook-ceph-rgw-prevoir-bm-store.rook-ceph.svc:80/loki-chunks-ceph-bkt-b7211883-66a9-4d83-960a-78c5ca2de17c
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/cache
        cache_ttl: 24h
        shared_store: s3

    query_range:
      # make queries more cache-able by aligning them with their step intervals
      align_queries_with_step: true
      max_retries: 5
      # parallelize queries in 15min intervals
      split_queries_by_interval: 15m
      cache_results: true

      results_cache:
        cache:
          # We're going to use the in-process "FIFO" cache
          enable_fifocache: true
          fifocache:
            size: 1024
            validity: 24h

    limits_config:
      max_cache_freshness_per_query: '10m'
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      # retention_period: 744h
      # retention_stream:
      # - selector: '{namespace="dev"}'
      #   priority: 1
      #   period: 24h

    ingester:
      chunk_idle_period: 3m
      chunk_block_size: 262144
      chunk_retain_period: 1m
      max_transfer_retries: 0
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 3

    chunk_store_config:
      max_look_back_period: 0s

    compactor:
      working_directory: /data/loki/retention
      shared_store: s3
      # compaction_interval: 10m
      # retention_enabled: true
      # retention_delete_delay: 2h
      # retention_delete_worker_count: 150

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

    frontend:
      log_queries_longer_than: 5s
      downstream_url: http://querier.loki-stack:3100
      compress_responses: true
---
#Frontend Service
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    name: query-frontend
  name: query-frontend
  namespace: loki
spec:
  ports:
  - name: query-frontend-http
    port: 3100
    protocol: TCP
    targetPort: 3100
  selector:
    name: query-frontend
  sessionAffinity: None
  type: ClusterIP

---
#Frontend Deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: query-frontend
  name: query-frontend
  namespace: loki
spec:
  minReadySeconds: 10
  replicas: 2
  selector:
    matchLabels:
      name: query-frontend
  template:
    metadata:
      labels:
        name: query-frontend
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/config.yaml
        - -log.level=debug
        - -target=query-frontend
        image: grafana/loki:latest
        imagePullPolicy: Always
        name: query-frontend
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        # resources:
        #   limits:
        #     memory: 1200Mi
        #   requests:
        #     cpu: "2"
        #     memory: 600Mi
        volumeMounts:
        - mountPath: /etc/loki
          name: loki-frontend
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: loki-frontend
        name: loki-frontend