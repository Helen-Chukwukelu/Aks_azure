apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: linkerd-helm
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.linkerd.io/stable
    chart: linkerd2
    helm:
      valueFiles: 
        - name-of-file-linkerd-directory
      values: |
        # This values.yaml file contains the values needed to enable HA mode.
        # Usage:
        #   helm install -f values.yaml -f values-ha.yaml

        enablePodAntiAffinity: true

        # proxy configuration
        proxy:
          resources:
            cpu:
              request: 100m
            memory:
              limit: 250Mi
              request: 20Mi

        # controller configuration
        controllerReplicas: 3
        controllerResources: &controller_resources
          cpu: &controller_resources_cpu
            limit: ""
            request: 100m
          memory:
            limit: 250Mi
            request: 50Mi
        destinationResources: *controller_resources
        publicAPIResources: *controller_resources

        # identity configuration
        identityResources:
          cpu: *controller_resources_cpu
          memory:
            limit: 250Mi
            request: 10Mi

        # heartbeat configuration
        heartbeatResources: *controller_resources

        # proxy injector configuration
        proxyInjectorResources: *controller_resources
        webhookFailurePolicy: Fail

        # service profile validator configuration
        spValidatorResources: *controller_resources

      parameters:
      - name: identity.issuer.scheme
        value: kubernetes.io/tls
      - name: installNamespace
        value: "false"
      - name: global.identityTrustAnchorsPEM
        value: |
        -----BEGIN CERTIFICATE-----
        MIIBjjCCATSgAwIBAgIRALv0txmRL8v+II3RLMTJqEIwCgYIKoZIzj0EAwIwJTEj
        MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwODA0MTcy
        NTQxWhcNMjYwODAzMTcyNTQxWjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
        c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGxjb92IHe/cpecK
        lb1O1Xvhhgl5C1v0fBkLoL9pH3R2PucNgVKypSWrJhGR/paE9tmPOckLqVWcvIN4
        QVsVd3yjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
        A1UdDgQWBBQQiWVEtldDBWiF+zl6VzrlxMsWXzAKBggqhkjOPQQDAgNIADBFAiAK
        QqzARq0jhZqsa5tfj9yyxp049tLRhVOyzXqPaILiZgIhALm+GdI2uplPL8xjN56l
        pHTJYTVqOiUCOCD1vC8fRvFL
        -----END CERTIFICATE-----
    targetRevision: 2.10.2
  destination:
    server: https://kubernetes.default.svc
    namespace: linkerd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

#Testing application vault authentication
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orgchart
  namespace: default
  labels:
    app: orgchart
spec:
  selector:
    matchLabels:
      app: orgchart
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: orgchart
    spec:
      serviceAccountName: internal-app
      containers:
        - name: orgchart
          image: jweissig/app:0.0.1
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: orgchart
  namespace: linkerd
  labels:
    app: orgchart
spec:
  selector:
    matchLabels:
      app: orgchart
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'linkerd-ro'
        vault.hashicorp.com/agent-inject-secret-linkerd-config.txt: 'internal/data/linkerd/config'
      labels:
        app: orgchart
    spec:
      serviceAccountName: vault-auth
      containers:
        - name: orgchart
          image: jweissig/app:0.0.1